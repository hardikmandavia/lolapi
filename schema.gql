# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Champion {
  id: String!
  key: String!
}

type LeagueEntry {
  leagueId: String!
  summonerId: String!
  summonerName: String!
  queueType: String!
  tier: String!
  rank: String!
  leaguePoints: Float!
  wins: Float!
  losses: Float!
  hotStreak: Boolean!
  veteran: Boolean!
  freshBlood: Boolean!
  inactive: Boolean!
}

type Match {
  gameId: Float!
  participants: [Participant!]!
  participantIdentities: [ParticipantIdentity!]!
  queueId: Float!
  gameType: String!
  gameDuration: Float!
  teams: [TeamStats!]!
  platformId: String!
  gameCreation: Float!
  seasonId: Float!
  gameVersion: String!
  mapId: Float!
  gameMode: String!
}

type MatchList {
  startIndex: Float!
  totalGames: Float!
  endIndex: Float!
  matches: [MatchReference!]!
}

type MatchReference {
  gameId: Float!
  gameDetails: Match!
  role: String!
  season: Float!
  platformId: String!
  champion: Float!
  championDetails: Champion
  queue: Float!
  queueDetails: Queue
  lane: String!
  timestamp: Float!
  region: String!
}

type Participant {
  participantId: Float!
  championId: Float!
  stats: ParticipantStats!
  timeline: ParticipantTimeline!
  teamId: Float!
  spell1Id: Float!
  spell2Id: Float!
  highestAchievedSeasonTier: String!
}

type ParticipantIdentity {
  participantId: Float!
  player: Player!
}

type ParticipantStats {
  win: Boolean!
  kills: Float!
  deaths: Float!
  assists: Float!
  item0: Float!
  item1: Float!
  item2: Float!
  item3: Float!
  item4: Float!
  item5: Float!
  item6: Float!
  goldEarned: Float!
  totalDamageTaken: Float!
  firstTowerKill: Boolean!
  wardsPlaced: Float!
  totalMinionsKilled: Float!
  firstTowerAssist: Boolean!
  participantId: Float!
  firstBloodAssist: Boolean!
  damageDealtToTurrets: Float!
  firstBloodKill: Boolean!
  sightWardsBoughtInGame: Float!
  perk0: Float!
  perk1: Float!
  perk2: Float!
  perk3: Float!
  perk4: Float!
  perk5: Float!
  perkPrimaryStyle: Float!
  perkSubStyle: Float!
}

type ParticipantTimeline {
  participantId: Float!
  csDiffPerMinDeltas: PeriodValues!
  damageTakenPerMinDeltas: PeriodValues!
  role: String!
  damageTakenDiffPerMinDeltas: PeriodValues!
  xpPerMinDeltas: PeriodValues!
  xpDiffPerMinDeltas: PeriodValues!
  lane: String!
  creepsPerMinDeltas: PeriodValues!
  goldPerMinDeltas: PeriodValues!
}

type PeriodValues {
  q1: Float!
  q2: Float!
  q3: Float!
  q4: Float!
}

type Player {
  profileIcon: Float!
  accountId: String!
  matchHistoryUri: String!
  currentAccountId: String!
  currentPlatformId: String!
  summonerName: String!
  summonerId: String!
  platformId: String!
}

type Query {
  fetchSummoner(name: String!, region: String!): Summoner!
}

type Queue {
  queueId: Float!
  map: String!
  description: String
}

type Summoner {
  id: String!
  accountId: String!
  puuid: String!
  name: String!
  profileIconId: Float!
  revisionDate: Float!
  summonerLevel: Float!
  region: String!
  ranked: [LeagueEntry!]!
  matchList: MatchList!
}

type TeamStats {
  towerKills: Float!
  riftHeraldKills: Float!
  firstBlood: Boolean!
  inhibitorKills: Float!
  firstBaron: Boolean!
  firstDragon: Boolean!
  dominionVictoryScore: Float!
  dragonKills: Float!
  baronKills: Float!
  firstInhibitor: Boolean!
  firstTower: Boolean!
  vilemawKills: Float!
  firstRiftHerald: Boolean!
  teamId: Float!
  win: String!
}
